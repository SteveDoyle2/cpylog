# This is a basic workflow to help you get started with Actions
#
# things to fixa at some point
# - add in latest_pyside_gui
# - latest_pyqt_gui for python 3.9 (currently vtk is not on PyPi)
#   - currently a duplicate build is running
name: CI

# Controls when the action will run.
#on: [push]
on:
  push:
    paths-ignore:
      #- ".github/**"
      - "*.md"
#    branches:
#      - master
  pull_request:
    branches: [ master ]

#on:
  # Triggers the workflow on push or pull request events but only for the master branch
  #push:
  #  branches: [ master ]
  #pull_request:
  #  branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  #workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    strategy:
      matrix:
         #python-version: [3.9]  # testing
         python-version: [3.7, 3.8, 3.9]   # TODO: should be enabled...disabled for testing...
         os: [ubuntu-latest]
         # , macos-latest, windows-latest
         mode: ['latest', 'latest_colorama', 'windows-latest_colorama']
         #include:
         #- node: 13
         #  os: ubuntu-18.04
         #  experimental: true
      #exclude:
      #    # Exclude all DB images except "mariadb_10.4" for all PHP versions except "7.3".
      #    - {python-version: 3.9, mode: "latest_pyqt_gui"}
      fail-fast: false
#strategy:
    #  matrix:
          #https://github.com/zopyx/xmldirector.connector/blob/master/.travis.yml#L15-L54
          #python-version: [3.7, 3.8]
          #env:
          # - {COVERAGE_RUN='coverage run'  CODECOV='codecov'  NUMPY='numpy scipy matplotlib h5py vtk pyqt5 pandas>=0.25 imageio pillow>5.2,!=7.1.0'  LIB='libblas-dev liblapack-dev'}

          #python-version: 3.8
          #env:
          # COVERAGE_RUN='coverage run'
          # CODECOV='codecov'
          # NUMPY='numpy scipy matplotlib h5py vtk pyqt5 pandas>=0.25 imageio pillow>5.2,!=7.1.0'
          # LIB='libblas-dev liblapack-dev'

    #--------------------------------------------------------------------------------------------------
    # Steps represent a sequence of tasks that will be executed as part of the job
    #env: ${{ matrix.env }}
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Print environment variables exposed by GitHub
        run: |
          echo "GITHUB_ACTOR=$GITHUB_ACTOR"
          echo "GITHUB_REPOSITORY=$GITHUB_REPOSITORY"
          echo "GITHUB_SHA=$GITHUB_SHA"
          echo "GITHUB_REF=$GITHUB_REF"
          echo "GITHUB_HEAD_REF=$GITHUB_HEAD_REF"
          echo "GITHUB_BASE_REF=$GITHUB_BASE_REF"
          echo "GITHUB_EVENT_NAME=$GITHUB_EVENT_NAME"
          echo "GITHUB_RUN_ID=$GITHUB_RUN_ID"
          echo "GITHUB_RUN_NUMBER=$GITHUB_RUN_NUMBER"
          echo "GITHUB_WORKFLOW=$GITHUB_WORKFLOW"
          echo "GITHUB_ACTION=$GITHUB_ACTION"

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
         python -m pip install --upgrade pip
         pip install flake8
         #if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
         pip list

        #mode: ['latest', 'latest_colorama']
        #
      - name: Install latest packages - ${{ matrix.mode }}
        if: ${{ matrix.mode == 'latest_colorama' || matrix.mode == 'windows-latest_colorama'}}
        run: |
          pip install colorama ipython psutil

#-----------------------------------------------------------------------------------

      - name: Install dependencies
        run: |
         pip install codecov
         python setup.py develop

      - name: List dependencies
        run: |
         pip list

      - name: Run Tests
        run: |
         #if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
         python cpylog/test_log.py
         coverage run cpylog/test_log.py

      - name: Upload coverage
        run: |
         codecov

#--------------------------------------------------------------------------------------------------
# https://docs.github.com/en/free-pro-team@latest/actions/guides/building-and-testing-python
# name: Python package
#
# on: [push]
#
# jobs:
#   build:
#
#     runs-on: ubuntu-latest
#     strategy:
#       matrix:
#         python-version: [2.7, 3.5, 3.6, 3.7, 3.8]

#     steps:
#     - uses: actions/checkout@v2
#     - name: Set up Python ${{ matrix.python-version }}
#       uses: actions/setup-python@v2
#       with:
#         python-version: ${{ matrix.python-version }}
#     - name: Install dependencies
#       run: |
#         python -m pip install --upgrade pip
#         pip install flake8 pytest
#         if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
#     - name: Lint with flake8
#       run: |
#         # stop the build if there are Python syntax errors or undefined names
#         flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
#         # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
#         flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
#     - name: Test with pytest
#       run: |
#         pytest
